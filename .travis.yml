# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=himitsu

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: HVKWQnji/D9IoNGquZvT1dhAiAp1fbwJpP34NRhINNdGJHX395gU8oty/qTlt5UpsIVBByLDYQUNcv4qjmBT4Q/xVFVHL/wkgNCFmx8Un7NG+lmqFTZeM4R/2VpuzHabiVtHO9Z5PoP1A5uxICI3V4iOWIF+TsmhLCRFwNmHUtDF799AN/MHsAq9kkVGAjsVAAR1MdUZxTzUF2Wft9AdKnDPQrZ9e3ux3mSwK4H0EexxMY38ikV+YgrSRUM8+/ATpSQVIfg8dynbSRmQjjYdrl4JNoSds9shHNIGHRxr0CB2fwAfgmKf79gchYXhbKQhaB5QhUjoF1B3zKXzFQp1clULofArttd4pasFw4wOWtNmelwVqoUuE49U1rHa0ItkymTeD0PJDE84exBDTmq6dhfQM3wp9iIKROjNRbOSokhGEmOPGL5RhSa6rWkXOsXtcW8bkqmBhhKjTjkxFq53I+dxocZKTIQ6z598kS3tvBW48lKOYYaLr80uagtjOgmwJc+8cqCmVL9M95NUAL0siZthJIEVVb9uiTONe2H/jBl1VnxWfFL2EYRHKsZBH8XKb1t66fbXajoPGgHL8DkuxO9fEysnui6q2Gl/lNxM/HFGsv0jsxRFy+StExS/97fLbnt5zgbc189LeMmf4kToNqfiFIP+EGnmwd1ceWOBuas=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
